rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if user is an admin
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow reading own profile or if admin
      allow read: if isOwner(userId) || isAdmin();
      
      // Allow creation of own profile during registration
      allow create: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow updates to own profile or if admin
      allow update: if isOwner(userId) || isAdmin();
      
      // Only admin can delete profiles
      allow delete: if isAdmin();
    }
    
    // Add more collection rules as needed for your application
    // Example for a cars collection:
    match /cars/{carId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin() || 
        (isAuthenticated() && request.resource.data.userId == request.auth.uid);
    }
  }
}
